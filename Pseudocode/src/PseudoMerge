BEGIN MERGESORT PROGRAM

METHOD mergeSort(INTEGER ARRAY arr, start AS INTEGER, end AS INTEGER) RETURNS VOID
    IF start is ">=" end
        RETURN
    END IF

    DECLARE & SET mid = (start + end) / 2

    CALL mergeSort(arr, start, mid)
    CALL mergeSort(arr, mid + 1, end)
    CALL merge(arr, start, mid, end)
END METHOD

METHOD merge(INTEGER ARRAY arr, start AS INTEGER, mid AS INTEGER, end AS INTEGER)
    DECLARE & SET n1 AS INTEGER = mid - start + 1
    DECLARE & SET n2 AS INTEGER = end - mid

    DECLARE & SET lh AS INTEGER ARRAY = new INTEGER ARRAY[n1]
    DECLARE & SET rh AS INTEGER ARRAY = new INTEGER ARRAY[n2]

    // COPY LEFT AND RIGHT ARRAYS

    FOR (i AS INTEGER; i < n1; INCREMENTING I)
        SET lh[i] = arr[start + i]
    END FOR

    FOR (j AS INTEGER; j < n2; INCREMENTING j)
        SET rh[j] = arr[mid + 1 + j]
    END FOR

    DECLARE INTEGERS i = 0, j = 0, k = start

    WHILE (i < n1 && j < n2)
        IF (lh[i] "<=" rh[j])
            SET arr[k] = lh[i]
            INCREMENT i
        ELSE
            SET arr[k] = rh[j]
            INCREMENT j
        END IF
        INCREMENT k
    END WHILE

    // COPY ANY REMAINING ELEMENTS
    WHILE (i < n1)
        SET arr[k] = lh[i]
        INCREMENT i
        INCREMENT k
    END WHILE

    WHILE (j < n2)
        SET arr[k] = rh[j]
        INCREMENT j
        INCREMENT k
    END WHILE
END METHOD
END PROGRAM
